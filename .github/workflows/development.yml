on:
  push:
    branches:
      - development

name: üöÄ Development Api Deploy

env:
  SERVER_DIR: 'public_html/api-dev/'
  APP_NAME: 'oi-chegamos'
  APP_ENV: 'local'
  APP_DEBUG: 'true'
  APP_URL: 'https://oichegamos.com.br/api-dev'
  DB_CONNECTION: 'mysql'

  # JWT_TTL: 10080
  # JWT_SECRET: ${{ secrets.JWT_SECRET }}

  DB_HOST: ${{ secrets.DEV_DB_HOST }}
  DB_PORT: ${{ secrets.DEV_DB_PORT }}
  DB_DATABASE: ${{ secrets.DEV_DB_DATABASE }}
  DB_USERNAME: ${{ secrets.DEV_DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DEV_DB_PASSWORD }}

jobs:
  build:
    name: ‚õèÔ∏è Build
    runs-on: ubuntu-latest

    steps:
      - name: üè† Checkout
        uses: actions/checkout@v3

      - name: ‚öôÔ∏è Setup PHP
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: '8.2'

      - name: ‚öôÔ∏è Setup Composer
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: highest

      - name: üëÆüèª Create env file
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_APP_NAME: ${{ env.APP_NAME }}
          envkey_APP_URL: ${{ env.APP_URL }}
          envkey_APP_ENV: ${{ env.APP_ENV }}
          envkey_APP_DEBUG: ${{ env.APP_DEBUG }}
          envkey_DB_CONNECTION: ${{ env.DB_CONNECTION }}
          envkey_DB_HOST: ${{ env.DB_HOST }}
          envkey_DB_PORT: ${{ env.DB_PORT }}
          envkey_DB_DATABASE: ${{ env.DB_DATABASE }}
          envkey_DB_USERNAME: ${{ env.DB_USERNAME }}
          envkey_DB_PASSWORD: ${{ env.DB_PASSWORD }}

      - name: üíº Zip vendor file
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r vendor.zip vendor

      - name: üßπClear vendor folder
        run: rm vendor -r

      - name: üìÇ Deploy to FTP
        uses: SamKirkland/FTP-Deploy-Action@4.3.3
        with:
          server: ftp.oichegamos.com.br
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASS }}
          server-dir: ${{ env.SERVER_DIR }}

      # - name: Post Deploy
      #   uses: fjogeleit/http-request-action@v1
      #   with:
      #     url: '${{ env.APP_URL }}/_post-deploy.php'
      #     method: 'POST'
      #     timeout: 60000
      #     preventFailureOnNoResponse: 'true'
      #     contentType: 'application/json'

      # - name: üìÑ Make Backup
      #   run: php artisan backup:run --only-db

      # - name: üì§ Upload backup
      #   uses: actions/upload-artifact@v3.1.0
      #   with:
      #     name: backup
      #     path: './storage/app/${{ env.APP_NAME }}'

      # - name: üîÉ Run migrations
      #   run: php artisan migrate
