on:
  push:
    branches:
      - development

name: 🚀 Development Api Deploy

env:
  SERVER_DIR: 'public_html/api-dev/'
  APP_NAME: 'oi-chegamos'
  APP_ENV: 'local'
  APP_DEBUG: 'true'
  APP_KEY: ${{ secrets.APP_KEY }}
  APP_URL: 'http://api-dev.oichegamos.com.br'
  POSTDEPLOY_URL: 'http://api-dev.oichegamos.com.br/_post-deploy.php'
  DB_CONNECTION: 'mysql'
  AUTH_GUARD: 'api'
  AUTHENTICATION_DRIVER: 'jwt'

  JWT_TTL: 10080
  JWT_SECRET: ${{ secrets.JWT_SECRET }}

  DB_HOST: ${{ secrets.DEV_DB_HOST }}
  DB_PORT: ${{ secrets.DEV_DB_PORT }}
  DB_DATABASE: ${{ secrets.DEV_DB_DATABASE }}
  DB_USERNAME: ${{ secrets.DEV_DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DEV_DB_PASSWORD }}

jobs:
  build:
    name: ⛏️ Build
    runs-on: ubuntu-latest

    steps:
      - name: 🏠 Checkout
        uses: actions/checkout@v3

      - name: ⚙️ Setup PHP
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: '7.4'

      - name: ⚙️ Setup Composer
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: highest

      - name: 👮🏻 Create env file
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_APP_DEBUG: ${{ env.APP_DEBUG }}
          envkey_APP_ENV: ${{ env.APP_ENV }}
          # envkey_APP_KEY: ${{ env.APP_KEY }}
          envkey_APP_NAME: ${{ env.APP_NAME }}
          envkey_APP_URL: ${{ env.APP_URL }}
          envkey_DB_CONNECTION: ${{ env.DB_CONNECTION }}
          envkey_DB_DATABASE: ${{ env.DB_DATABASE }}
          envkey_DB_HOST: ${{ env.DB_HOST }}
          envkey_DB_PASSWORD: ${{ env.DB_PASSWORD }}
          envkey_DB_PORT: ${{ env.DB_PORT }}
          envkey_DB_USERNAME: ${{ env.DB_USERNAME }}
          envkey_JWT_TTL: ${{ env.JWT_TTL }}
          envkey_JWT_SECRET: ${{ env.JWT_SECRET }}
          # envkey_AUTH_GUARD: ${{ env.AUTH_GUARD }}
          # envkey_AUTHENTICATION_DRIVER: ${{ env.AUTHENTICATION_DRIVER }}

      - name: 📄 Make Backup
        run: |
          export MYSQL_PWD=${{ env.DB_PASSWORD }}
          mysqldump \
          --user=${{ env.DB_USERNAME }} \
          --host=${{ env.DB_HOST }} \
          --port=${{ env.DB_PORT }} \
          --databases ${{ env.DB_DATABASE }} \
          --no-tablespaces \
          --column-statistics=0 \
          --ignore-table=${{ env.DB_DATABASE }}.users \
          > backup.sql
  
      - name: 📤 Compress backup
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r backup.zip backup.sql

      - name: 📤 Upload backup
        uses: actions/upload-artifact@v3.1.0
        with:
          name: backup
          path: './backup.zip'

      - name: 🔃 Run migrations
        run: php artisan migrate --force

      - name: 💼 Zip vendor file
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r vendor.zip vendor

      - name: 🧹 Clear project
        run: |
          rm -rf vendor/
          rm -rf backup.sql
          rm -rf backup.zip

      - name: 📂 Deploy to FTP
        uses: SamKirkland/FTP-Deploy-Action@4.3.3
        with:
          server: ftp.oichegamos.com.br
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASS }}
          server-dir: ${{ env.SERVER_DIR }}

      - name: Post Deploy
        uses: satak/webrequest-action@master
        with:
          url: ${{ env.POSTDEPLOY_URL }}
          method: POST
